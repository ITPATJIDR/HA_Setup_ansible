---
- name: "Install required packages"
  ansible.builtin.apt:
    name:
      - curl
      - ca-certificates
      - apt-transport-https
    state: present

- name: "Add Kubernetes GPG key"
  ansible.builtin.shell: |
    curl -fsSL https://pkgs.k8s.io/core:/stable:/v{{ kube_minior }}/deb/Release.key | gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
  args:
    creates: /etc/apt/keyrings/kubernetes-apt-keyring.gpg

- name: "Add Kubernetes repository"
  ansible.builtin.copy:
    dest: /etc/apt/sources.list.d/kubernetes.list
    content: "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v{{ kube_minior }}/deb/ /"
    mode: '0644'

- name: "Update package cache"
  ansible.builtin.apt:
    update_cache: yes

- name: "Install Kubernetes components"
  ansible.builtin.apt:
    name:
      - kubelet={{ kube_version }}-1.1
      - kubeadm={{ kube_version }}-1.1
      - kubectl={{ kube_version }}-1.1
      - cri-tools
    state: present

- name: "Start and Enable Kubelet"    
  ansible.builtin.systemd:
    name: kubelet
    enabled: yes
    state: started
  when: inventory_hostname in groups['bootstrap-node']

- name: "Pull All Images"
  ansible.builtin.shell: kubeadm config images pull

- name: "Verify Kubernetes tools installation"
  ansible.builtin.shell: |
    echo "kubectl: $(kubectl version --client 2>/dev/null | head -1)"
    echo "kubeadm: $(kubeadm version 2>/dev/null | head -1)"
    echo "kubelet: $(kubelet --version 2>/dev/null | head -1)"
    echo "crictl: $(crictl --version 2>/dev/null | head -1)"
  register: k8s_versions

- name: "Display Kubernetes versions"
  ansible.builtin.debug:
    var: k8s_versions.stdout_lines

- name: "Start and Enable Kubelet on bootstrap node only"    
  ansible.builtin.systemd:
    name: kubelet
    enabled: yes
    state: started
  when: inventory_hostname in groups['bootstrap-node']
  