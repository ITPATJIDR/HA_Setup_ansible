---
- name: "Check if kubectl can connect to cluster"
  ansible.builtin.shell: |
    kubectl cluster-info
  register: cluster_check
  changed_when: false
  failed_when: false

- name: "Display cluster connection status"
  ansible.builtin.debug:
    msg: "{{ cluster_check.stdout if cluster_check.rc == 0 else 'Cluster not accessible: ' + cluster_check.stderr }}"

- name: "Install Calico using original manifest (more reliable)"
  ansible.builtin.shell: |
    kubectl apply -f https://raw.githubusercontent.com/projectcalico/calico/v3.28.0/manifests/calico.yaml
  ignore_errors: yes

- name: "Wait for Calico pods to be created"
  ansible.builtin.shell: |
    kubectl get pods -n kube-system | grep calico
  register: calico_pods_check
  changed_when: false
  retries: 10
  delay: 30
  until: calico_pods_check.rc == 0
  ignore_errors: yes

- name: "Wait for Calico node pods to be ready"
  ansible.builtin.shell: |
    kubectl wait --for=condition=ready pod -l k8s-app=calico-node -n kube-system --timeout=300s
  ignore_errors: yes

- name: "Wait for Calico controller to be ready"
  ansible.builtin.shell: |
    kubectl wait --for=condition=ready pod -l k8s-app=calico-kube-controllers -n kube-system --timeout=300s
  ignore_errors: yes

- name: "Check Calico installation"
  ansible.builtin.shell: |
    kubectl get pods -n kube-system | grep calico
  register: calico_status
  changed_when: false
  failed_when: false

- name: "Display Calico status"
  ansible.builtin.debug:
    msg: "{{ calico_status.stdout if calico_status.rc == 0 else 'Calico pods not found' }}"

- name: "Check node status after Calico installation"
  ansible.builtin.shell: |
    kubectl get nodes
  register: node_status
  changed_when: false
  failed_when: false

- name: "Display node status"
  ansible.builtin.debug:
    msg: "{{ node_status.stdout if node_status.rc == 0 else 'Cannot get node status' }}"