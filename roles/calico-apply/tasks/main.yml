---
- name: "Check if kubectl can connect to cluster"
  ansible.builtin.shell: |
    kubectl cluster-info
  register: cluster_check
  changed_when: false
  failed_when: false

- name: "Display cluster connection status"
  ansible.builtin.debug:
    msg: "{{ cluster_check.stdout if cluster_check.rc == 0 else 'Cluster not accessible: ' + cluster_check.stderr }}"

- name: "Install Calico Tigera Operator"
  ansible.builtin.shell: |
    kubectl create -f https://raw.githubusercontent.com/projectcalico/calico/v3.28.0/manifests/tigera-operator.yaml
  ignore_errors: yes
  when: cluster_check.rc == 0

- name: "Wait for Tigera Operator to be ready"
  ansible.builtin.shell: |
    kubectl wait --for=condition=available deployment/tigera-operator -n tigera-operator --timeout=300s
  ignore_errors: yes
  when: cluster_check.rc == 0

- name: "Install Calico CNI"
  ansible.builtin.shell: |
    kubectl create -f https://raw.githubusercontent.com/projectcalico/calico/v3.28.0/manifests/custom-resources.yaml
  ignore_errors: yes
  when: cluster_check.rc == 0

- name: "Wait for Calico pods to be ready"
  ansible.builtin.shell: |
    kubectl wait --for=condition=ready pod -l k8s-app=calico-node -n kube-system --timeout=300s
  ignore_errors: yes
  when: cluster_check.rc == 0

- name: "Wait for Calico controller to be ready"
  ansible.builtin.shell: |
    kubectl wait --for=condition=ready pod -l k8s-app=calico-kube-controllers -n kube-system --timeout=300s
  ignore_errors: yes
  when: cluster_check.rc == 0

- name: "Check Calico installation"
  ansible.builtin.shell: |
    kubectl get pods -n kube-system | grep calico
  register: calico_status
  changed_when: false
  failed_when: false
  when: cluster_check.rc == 0

- name: "Display Calico status"
  ansible.builtin.debug:
    msg: "{{ calico_status.stdout if calico_status.rc == 0 else 'Calico not found or cluster not accessible' }}"
  when: cluster_check.rc == 0

- name: "Warn about cluster connectivity issues"
  ansible.builtin.debug:
    msg: "WARNING: Cannot connect to Kubernetes cluster. Please check if the cluster is properly initialized and kubeconfig is correct."
  when: cluster_check.rc != 0