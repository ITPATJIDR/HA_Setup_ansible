---
- name: Clone Istio repository
  ansible.builtin.git:
    repo: https://github.com/istio/istio.git
    dest: /tmp/istio
    force: yes

- name: Install istio-base using Helm
  ansible.builtin.shell: |
    helm upgrade --install istio-base /tmp/istio/manifests/charts/base -n istio-system --create-namespace

- name: Install istiod using Helm
  ansible.builtin.shell: |
    helm upgrade --install istiod /tmp/istio/manifests/charts/istio-control/istio-discovery -n istio-system

- name: Enable Istio injection for default namespace
  ansible.builtin.shell: |
    kubectl label namespace default istio-injection=enabled --overwrite
  register: label_result
  changed_when: "'labeled' in label_result.stdout or 'overwritten' in label_result.stdout"

- name: Check if Gateway API CRD exists
  ansible.builtin.shell: |
    kubectl get crd gateways.gateway.networking.k8s.io
  register: gateway_crd_check
  changed_when: false
  failed_when: false

- name: Install Gateway API CRDs
  ansible.builtin.shell: |
    kubectl kustomize "github.com/kubernetes-sigs/gateway-api/config/crd?ref=v1.3.0" | kubectl apply -f -
  when: gateway_crd_check.rc != 0

- name: Deploy Bookinfo sample application
  ansible.builtin.shell: |
    kubectl apply -f https://raw.githubusercontent.com/istio/istio/release-1.27/samples/bookinfo/platform/kube/bookinfo.yaml

- name: Get services and pods
  ansible.builtin.shell: |
    kubectl get services,pods -n default
  register: svc_pod_list
  changed_when: false
  failed_when: false

- name: Wait for ratings pods to be created
  ansible.builtin.shell: |
    kubectl get pod -l app=ratings -n default -o jsonpath='{.items[*].metadata.name}'
  register: ratings_pods
  changed_when: false
  retries: 30
  delay: 10
  until: ratings_pods.stdout != ""

- name: Wait for ratings pod to be Ready
  ansible.builtin.shell: |
    kubectl wait --for=condition=ready pod -l app=ratings -n default --timeout=300s
  register: ratings_ready
  changed_when: "'condition met' in ratings_ready.stdout"
  failed_when: false

- name: Get ratings pod name
  ansible.builtin.shell: |
    kubectl get pod -l app=ratings -n default -o jsonpath='{.items[0].metadata.name}'
  register: ratings_pod
  changed_when: false

- name: Display services and pods
  ansible.builtin.debug:
    msg: "\n{{ svc_pod_list.stdout }}"

- name: Test Bookinfo application
  ansible.builtin.shell: |
    kubectl exec "{{ ratings_pod.stdout }}" -n default -c ratings -- curl -sS productpage:9080/productpage | grep -o "<title>.*</title>"
  register: curl_result
  changed_when: false
  failed_when: false

- name: Display curl result
  ansible.builtin.debug:
    msg: "{{ curl_result.stdout }}"
  when: curl_result.stdout is defined

- name: Deploy Bookinfo Gateway
  ansible.builtin.shell: |
    kubectl apply -f https://raw.githubusercontent.com/istio/istio/release-1.27/samples/bookinfo/gateway-api/bookinfo-gateway.yaml

- name: Annotate Gateway with NodePort service type
  ansible.builtin.shell: |
    kubectl annotate gateway bookinfo-gateway networking.istio.io/service-type=NodePort -n default --overwrite
  register: annotate_out
  changed_when: "'annotated' in annotate_out.stdout or 'configured' in annotate_out.stdout"
  failed_when: false

- name: Get Gateway information
  ansible.builtin.shell: |
    kubectl get gateway -n default -o wide
  register: gateways_out
  changed_when: false
  failed_when: false

- name: Display Gateway information
  ansible.builtin.debug:
    msg: "\n{{ gateways_out.stdout }}"