---
- name: Clone Istio repository
  ansible.builtin.git:
    repo: https://github.com/istio/istio.git
    dest: /tmp/istio
    force: yes

- name: Install istio-base using Helm
  kubernetes.core.helm:
    name: istio-base
    chart_ref: /tmp/istio/manifests/charts/base
    release_namespace: istio-system
    create_namespace: yes
    state: present

- name: Install istiod using Helm
  kubernetes.core.helm:
    name: istiod
    chart_ref: /tmp/istio/manifests/charts/istio-control/istio-discovery
    release_namespace: istio-system
    state: present

- name: Enable Istio injection for default namespace
  kubernetes.core.k8s:
    name: default
    api_version: v1
    kind: Namespace
    state: present
    definition:
      metadata:
        name: default
        labels:
          istio-injection: enabled

- name: Check if Gateway API CRD exists
  kubernetes.core.k8s_info:
    api_version: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    name: gateways.gateway.networking.k8s.io
  register: gateway_crd
  ignore_errors: yes

- name: Install Gateway API CRDs
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('url', 'https://raw.githubusercontent.com/kubernetes-sigs/gateway-api/config/crd/v1.3.0/standard/gateway.networking.k8s.io_gateways.yaml', wantlist=True) }}"
  when: gateway_crd.resources | length == 0

- name: Deploy Bookinfo sample application
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('url', 'https://raw.githubusercontent.com/istio/istio/release-1.27/samples/bookinfo/platform/kube/bookinfo.yaml', wantlist=True) }}"

- name: Get services and pods
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Service
  register: services

- name: Get pods
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Pod
  register: pods

- name: Display services and pods
  ansible.builtin.debug:
    msg: "Services: {{ services.resources | map(attribute='metadata.name') | list }}, Pods: {{ pods.resources | map(attribute='metadata.name') | list }}"

- name: Test Bookinfo application
  kubernetes.core.k8s_exec:
    namespace: default
    pod: "{{ item.metadata.name }}"
    container: ratings
    command: curl -sS productpage:9080/productpage
  loop: "{{ pods.resources | selectattr('metadata.labels.app', 'equalto', 'ratings') | list }}"
  register: curl_result
  ignore_errors: yes

- name: Display curl result
  ansible.builtin.debug:
    msg: "{{ curl_result.stdout }}"
  when: curl_result.stdout is defined

- name: Deploy Bookinfo Gateway
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('url', 'https://raw.githubusercontent.com/istio/istio/release-1.27/samples/bookinfo/gateway-api/bookinfo-gateway.yaml', wantlist=True) }}"

- name: Annotate Gateway with NodePort service type
  kubernetes.core.k8s:
    name: bookinfo-gateway
    namespace: default
    api_version: gateway.networking.k8s.io/v1beta1
    kind: Gateway
    state: present
    definition:
      metadata:
        name: bookinfo-gateway
        namespace: default
        annotations:
          networking.istio.io/service-type: NodePort
      spec: {}

- name: Get Gateway information
  kubernetes.core.k8s_info:
    api_version: gateway.networking.k8s.io/v1beta1
    kind: Gateway
  register: gateways

- name: Display Gateway information
  ansible.builtin.debug:
    msg: "Gateways: {{ gateways.resources | map(attribute='metadata.name') | list }}"