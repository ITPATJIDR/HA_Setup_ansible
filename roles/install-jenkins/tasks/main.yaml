---
- name: "Update package cache"
  ansible.builtin.apt:
    update_cache: yes

- name: "Install required packages for Jenkins"
  ansible.builtin.apt:
    name:
      - openjdk-17-jdk
      - wget
      - gnupg
      - software-properties-common
    state: present

- name: "Add Jenkins GPG key"
  ansible.builtin.shell: |
    wget -q -O - https://pkg.jenkins.io/debian-stable/jenkins.io-2023.key | apt-key add -
  args:
    creates: /etc/apt/trusted.gpg.d/jenkins.gpg

- name: "Add Jenkins repository"
  ansible.builtin.copy:
    dest: /etc/apt/sources.list.d/jenkins.list
    content: "deb https://pkg.jenkins.io/debian-stable binary/"
    mode: '0644'

- name: "Update package cache after adding Jenkins repo"
  ansible.builtin.apt:
    update_cache: yes

- name: "Install Jenkins"
  ansible.builtin.apt:
    name: jenkins
    state: present

- name: "Start and enable Jenkins service"
  ansible.builtin.systemd:
    name: jenkins
    enabled: yes
    state: started

- name: "Wait for Jenkins to start"
  ansible.builtin.wait_for:
    port: 8080
    host: "{{ ansible_default_ipv4.address }}"
    delay: 10
    timeout: 60

- name: "Check if Jenkins is already configured"
  ansible.builtin.stat:
    path: /var/lib/jenkins/secrets/initialAdminPassword
  register: jenkins_password_file

- name: "Wait for Jenkins to be fully initialized (only if not configured)"
  ansible.builtin.wait_for:
    path: /var/lib/jenkins/secrets/initialAdminPassword
    timeout: 120
    delay: 5
  when: not jenkins_password_file.stat.exists

- name: "Get Jenkins initial admin password (if available)"
  ansible.builtin.shell: cat /var/lib/jenkins/secrets/initialAdminPassword
  register: jenkins_password
  changed_when: false
  failed_when: false
  when: jenkins_password_file.stat.exists

- name: "Check Jenkins configuration status"
  ansible.builtin.shell: |
    if [ -f /var/lib/jenkins/config.xml ]; then
      if grep -q "useSecurity>true" /var/lib/jenkins/config.xml; then
        echo "Jenkins is configured and secured"
      else
        echo "Jenkins is configured but not secured"
      fi
    else
      echo "Jenkins configuration not found"
    fi
  register: jenkins_config_status
  changed_when: false

- name: "Display Jenkins status and access information"
  ansible.builtin.debug:
    msg: |
      ===============================================
      Jenkins Status: {{ jenkins_config_status.stdout }}
      ===============================================
      
      {% if jenkins_password_file.stat.exists and jenkins_password.rc == 0 %}
      Initial admin password: {{ jenkins_password.stdout }}
      Please complete the setup wizard in your browser.
      {% elif jenkins_password_file.stat.exists %}
      Jenkins is initializing. Please wait and check the web interface.
      {% else %}
      Jenkins has already been configured.
      The initial admin password has been used and removed.
      Please use your existing admin credentials.
      {% endif %}
      
      Jenkins URL: http://{{ ansible_default_ipv4.address }}:8080
      
      ===============================================


- name: "Install additional useful packages for Jenkins"
  ansible.builtin.apt:
    name:
      - git
      - curl
      - unzip
      - docker.io
      - ca-certificates
      - apt-transport-https
    state: present

- name: "Add Kubernetes GPG key"
  ansible.builtin.shell: |
    curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.31/deb/Release.key | gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
  args:
    creates: /etc/apt/keyrings/kubernetes-apt-keyring.gpg

- name: "Add Kubernetes repository"
  ansible.builtin.copy:
    dest: /etc/apt/sources.list.d/kubernetes.list
    content: "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.31/deb/ /"
    mode: '0644'

- name: "Update package cache after adding Kubernetes repo"
  ansible.builtin.apt:
    update_cache: yes

- name: "Install kubectl"
  ansible.builtin.apt:
    name: kubectl
    state: present

- name: "Verify kubectl installation"
  ansible.builtin.command: kubectl version --client
  register: kubectl_version
  changed_when: false

- name: "Display kubectl version"
  ansible.builtin.debug:
    msg: "kubectl installed successfully: {{ kubectl_version.stdout_lines[0] }}"

- name: "Add jenkins user to docker group"
  ansible.builtin.user:
    name: jenkins
    groups: docker
    append: yes

- name: "Restart Jenkins to apply docker group changes"
  ansible.builtin.systemd:
    name: jenkins
    state: restarted 